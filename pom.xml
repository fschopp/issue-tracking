<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>net.florianschoppmann.tools</groupId>
    <artifactId>issue-tracking-parent</artifactId>
    <version>1.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>

    <name>Issue Tracking Tools, Parent POM</name>
    <description>
        Libraries for high-level interaction with issue trackers through their REST APIs, plus tools for issue-tracker
        migration.
    </description>
    <url>https://github.com/fschopp/issue-tracking</url>

    <licenses>
        <license>
            <name>Apache License 2.0</name>
            <url>https://raw.github.com/fschopp/issue-tracking/master/LICENSE</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
        <url>https://github.com/fschopp/issue-tracking</url>
        <connection>scm:git:https://github.com/fschopp/issue-tracking.git</connection>
        <developerConnection>scm:git:https://github.com/fschopp/issue-tracking.git</developerConnection>
        <tag>master</tag>
    </scm>

    <issueManagement>
        <system>GitHub</system>
        <url>https://github.com/fschopp/issue-tracking/issues</url>
    </issueManagement>

    <ciManagement>
        <system>Travis</system>
        <url>https://travis-ci.org/fschopp/issue-tracking</url>
    </ciManagement>

    <developers>
        <developer>
            <id>fschopp</id>
            <name>Florian Schoppmann</name>
            <email>mail@florian-schoppmann.net</email>
            <url>https://www.florian-schoppmann.net</url>
        </developer>
    </developers>

    <distributionManagement>
        <site>
            <id>github</id>
            <url>scm:git:https://github.com/fschopp/issue-tracking.git</url>
        </site>
    </distributionManagement>

    <inceptionYear>2019</inceptionYear>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <apache.httpclient.version>4.5.7</apache.httpclient.version>
        <asana.version>eee7e0fc25add6c781876d612cc67f4870d7e420</asana.version>
        <atlassian.concurrent.version>4.0.1</atlassian.concurrent.version>
        <atlassian.jira.client.version>5.1.2-2bd0a62e</atlassian.jira.client.version>
        <atlassian.fugue.version>4.7.2</atlassian.fugue.version>
        <checker.framework.version>2.7.0</checker.framework.version>
        <eclipse.link.version>2.7.4</eclipse.link.version>
        <glassfish.json.version>1.1.5</glassfish.json.version>
        <google.http-client.version>1.20.0</google.http-client.version>
        <jakarta.json.version>1.1.5</jakarta.json.version>
        <java.version>11</java.version>
        <java.futures.version>1.1.0</java.futures.version>
        <jaxb-api.version>2.3.2</jaxb-api.version>
        <jettison.version>1.5.2</jettison.version>
        <maven.assembly.version>3.1.1</maven.assembly.version>
        <maven.dependency.analyzer.version>1.11.1</maven.dependency.analyzer.version>
        <maven.jaxb2.version>0.14.0</maven.jaxb2.version>
        <maven.jar.version>3.1.1</maven.jar.version>
        <maven.javadoc.version>3.1.1</maven.javadoc.version>
        <maven.project-info-reports.version>3.0.0</maven.project-info-reports.version>
        <maven.site.version>3.8.2</maven.site.version>
        <jax.rs.version>2.1.5</jax.rs.version>
        <jersey1.version>1.19.4</jersey1.version>
        <jersey2.version>2.28</jersey2.version>
        <jopt-simple.version>6.0-alpha-3</jopt-simple.version>
        <maven.compiler.version>3.8.0</maven.compiler.version>
        <maven.checkstyle.version>3.0.0</maven.checkstyle.version>
        <maven.dependency.version>3.1.1</maven.dependency.version>
        <slf4j.version>1.7.26</slf4j.version>
        <testng.version>6.14.3</testng.version>
        <xodus.version>1.3.91</xodus.version>
    </properties>

    <repositories>
        <!-- Unfortunately required for some Atlassian JIRA packages. For example,
             com.atlassian.jira:jira-rest-java-client-api is not on Maven Central.

             As always with Atlassian, information online is very inconsistent.
             https://ecosystem.atlassian.net/wiki/spaces/JRJC/pages/27164674/Download suggests this repository:
             https://packages.atlassian.com/public, but at the time of this writing, that repository did not have all
             transitive dependencies (including Atlassian ones). Now,
             https://developer.atlassian.com/server/framework/atlassian-sdk/atlassian-maven-repositories-2818705/
             suggests what is currently configured here, and it seems to work (for now). -->
        <repository>
            <id>atlassian-public</id>
            <url>https://packages.atlassian.com/mvn/maven-external/</url>
        </repository>

        <!-- Unfortunately, at the time of this writing, the latest Asana Java client on Maven Central was 0.8.1, which
             had a critical bug: https://github.com/Asana/java-asana/pull/80
             We therefore use a patched version that is known to work, and https://jitpack.io provides a service to
             build and serve the artifact from GitHub. -->
        <repository>
            <id>jitpack.io</id>
            <url>https://jitpack.io</url>
        </repository>
    </repositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.checkerframework</groupId>
                <artifactId>checker-qual</artifactId>
                <version>${checker.framework.version}</version>
            </dependency>

            <dependency>
                <groupId>net.florianschoppmann.tools</groupId>
                <artifactId>issue-tracking-asana</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>net.florianschoppmann.tools</groupId>
                <artifactId>issue-tracking-conversion</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>net.florianschoppmann.tools</groupId>
                <artifactId>issue-tracking-jira</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>net.florianschoppmann.tools</groupId>
                <artifactId>issue-tracking-util</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>net.florianschoppmann.tools</groupId>
                <artifactId>issue-tracking-youtrack</artifactId>
                <version>${project.version}</version>
            </dependency>


            <!-- We don't use the Apache Http Client directly, but it comes as a transitive dependency of both Asana
                 and Atlassian. So we need to manage the version. -->
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${apache.httpclient.version}</version>
            </dependency>

            <dependency>
                <groupId>com.github.fschopp</groupId>
                <artifactId>java-asana</artifactId>
                <version>${asana.version}</version>
                <exclusions>
                    <!-- Can't have classes in javax.*, but not needed at runtime anyway. -->
                    <exclusion>
                        <groupId>com.google.code.findbugs</groupId>
                        <artifactId>jsr305</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- Transitive dependency that we use for com.google.api.client.util.DateTime#getValue().
                 Should be same version as as specified by com.asana:asana. -->
            <dependency>
                <groupId>com.google.http-client</groupId>
                <artifactId>google-http-client</artifactId>
                <version>${google.http-client.version}</version>
                <exclusions>
                    <!-- Can't have classes in javax.*, but not needed at runtime anyway. -->
                    <exclusion>
                        <groupId>com.google.code.findbugs</groupId>
                        <artifactId>jsr305</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>net.sf.jopt-simple</groupId>
                <artifactId>jopt-simple</artifactId>
                <version>${jopt-simple.version}</version>
            </dependency>

            <dependency>
                <groupId>net.florianschoppmann.java</groupId>
                <artifactId>java-futures</artifactId>
                <version>${java.futures.version}</version>
            </dependency>

            <dependency>
                <groupId>jakarta.xml.bind</groupId>
                <artifactId>jakarta.xml.bind-api</artifactId>
                <version>${jaxb-api.version}</version>
            </dependency>

            <dependency>
                <groupId>jakarta.json</groupId>
                <artifactId>jakarta.json-api</artifactId>
                <version>${jakarta.json.version}</version>
            </dependency>

            <dependency>
                <groupId>jakarta.ws.rs</groupId>
                <artifactId>jakarta.ws.rs-api</artifactId>
                <version>${jax.rs.version}</version>
            </dependency>

            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>jakarta.json</artifactId>
                <version>${glassfish.json.version}</version>
            </dependency>

            <dependency>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-client</artifactId>
                <version>${jersey2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.core</groupId>
                <artifactId>jersey-common</artifactId>
                <version>${jersey2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.inject</groupId>
                <artifactId>jersey-hk2</artifactId>
                <version>${jersey2.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-multipart</artifactId>
                <version>${jersey2.version}</version>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-jaxb</artifactId>
                <version>${jersey2.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.glassfish.jersey.media</groupId>
                <artifactId>jersey-media-moxy</artifactId>
                <version>${jersey2.version}</version>
            </dependency>

            <dependency>
                <groupId>org.eclipse.persistence</groupId>
                <artifactId>org.eclipse.persistence.moxy</artifactId>
                <version>${eclipse.link.version}</version>
            </dependency>

            <dependency>
                <groupId>com.atlassian.jira</groupId>
                <artifactId>jira-rest-java-client-core</artifactId>
                <version>${atlassian.jira.client.version}</version>
                <exclusions>
                    <!-- Superseded by: jakarta.xml.bind:jakarta.xml.bind-api -->
                    <exclusion>
                        <groupId>javax.xml.bind</groupId>
                        <artifactId>jaxb-api</artifactId>
                    </exclusion>
                    <!-- Superseded by: jakarta.ws.rs:jakarta.ws.rs-api -->
                    <exclusion>
                        <groupId>javax.ws.rs</groupId>
                        <artifactId>jsr311-api</artifactId>
                    </exclusion>
                    <!-- Can't have classes in javax.*, but not needed at runtime anyway. -->
                    <exclusion>
                        <groupId>com.google.code.findbugs</groupId>
                        <artifactId>jsr305</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.atlassian.jira</groupId>
                <artifactId>jira-rest-java-client-api</artifactId>
                <version>${atlassian.jira.client.version}</version>
                <exclusions>
                    <!-- Can't have classes in javax.*, but not needed at runtime anyway. -->
                    <exclusion>
                        <groupId>com.google.code.findbugs</groupId>
                        <artifactId>jsr305</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- Runtime dependency for Atlassian JIRA client. -->
            <dependency>
                <groupId>io.atlassian.fugue</groupId>
                <artifactId>fugue</artifactId>
                <version>${atlassian.fugue.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>io.atlassian.util.concurrent</groupId>
                <artifactId>atlassian-util-concurrent</artifactId>
                <version>${atlassian.concurrent.version}</version>
            </dependency>

            <!-- The Atlassian Jira client unfortunately still depends on Jersey 1. -->
            <dependency>
                <groupId>com.sun.jersey</groupId>
                <artifactId>jersey-client</artifactId>
                <version>${jersey1.version}</version>
            </dependency>

            <!-- JetBrain Xodus embedded database -->
            <dependency>
                <groupId>org.jetbrains.xodus</groupId>
                <artifactId>xodus-openAPI</artifactId>
                <version>${xodus.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.xodus</groupId>
                <artifactId>xodus-environment</artifactId>
                <version>${xodus.version}</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains.xodus</groupId>
                <artifactId>xodus-entity-store</artifactId>
                <version>${xodus.version}</version>
            </dependency>

            <dependency>
                <groupId>org.codehaus.jettison</groupId>
                <artifactId>jettison</artifactId>
                <version>${jettison.version}</version>
                <exclusions>
                    <!-- Superseded by: jakarta.xml.bind:jakarta.xml.bind-api -->
                    <exclusion>
                        <groupId>stax</groupId>
                        <artifactId>stax-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-simple</artifactId>
                <version>${slf4j.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jul-to-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>

            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>${testng.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.version}</version>
                <configuration>
                    <release>${java.version}</release>
                    <fork>true</fork>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven.dependency.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>analyze-only</goal>
                        </goals>
                        <configuration>
                            <failOnWarning>true</failOnWarning>
                            <outputXML>true</outputXML>
                        </configuration>
                    </execution>
                </executions>
                <!-- Need to override because of https://issues.apache.org/jira/browse/MSHARED-761 -->
                <dependencies>
                    <dependency>
                        <groupId>org.apache.maven.shared</groupId>
                        <artifactId>maven-dependency-analyzer</artifactId>
                        <version>${maven.dependency.analyzer.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven.javadoc.version}</version>
                <executions>
                    <execution>
                        <id>aggregate</id>
                        <goals>
                            <goal>aggregate-no-fork</goal>
                        </goals>
                        <phase>site</phase>
                    </execution>
                </executions>
                <configuration>
                    <!-- Necessary for JDK parts that our JPMS automatic modules use -->
                    <additionalOptions>
                        <additionalOption>--add-modules</additionalOption>
                        <additionalOption>java.net.http</additionalOption>
                    </additionalOptions>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${maven.project-info-reports.version}</version>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-site-plugin</artifactId>
                <version>${maven.site.version}</version>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>${maven.assembly.version}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>${maven.jar.version}</version>
                </plugin>

                <!-- Note: We also tested org.codehaus.mojo:jaxb2-maven-plugin:2.4, but that plugin still had this problem:
                     https://github.com/mojohaus/jaxb2-maven-plugin/issues/104,
                     which was a problem in the first place because of https://stackoverflow.com/a/38513529 -->
                <plugin>
                    <groupId>org.jvnet.jaxb2.maven2</groupId>
                    <artifactId>maven-jaxb2-plugin</artifactId>
                    <version>${maven.jaxb2.version}</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <reporting>
        <plugins>
            <!-- Maven 3.2.1 seems not to honor the configured versions from build -> pluginManagement.  -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-project-info-reports-plugin</artifactId>
                <version>${maven.project-info-reports.version}</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>${maven.javadoc.version}</version>
                <reportSets>
                    <!-- by default, id = "default" -->
                    <reportSet>
                        <reports>
                            <!-- Select non-aggregate reports -->
                            <report>javadoc</report>
                        </reports>
                    </reportSet>
                    <reportSet>
                        <id>aggregate</id>
                        <!-- Don't run aggregate in child modules. -->
                        <inherited>false</inherited>
                        <reports>
                            <report>aggregate</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

    <modules>
        <module>issue-tracking-asana</module>
        <module>issue-tracking-conversion</module>
        <module>issue-tracking-jira</module>
        <module>issue-tracking-util</module>
        <module>issue-tracking-tool</module>
        <module>issue-tracking-youtrack</module>
    </modules>
</project>
